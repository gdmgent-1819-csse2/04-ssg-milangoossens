{"data":{"markdownRemark":{"html":"<p>Deze site is gemaakt met behulp van de static site generator Gatsby.</p>\n<h1>Installeren en opstarten van Gatsby</h1>\n<p>We beginnen met het installeren van de Gatsby CLI door het onderstaande commando in de console uit te voeren. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli</code></pre></div>\n<p>Wanneer dit geïnstalleerd is creëren we in de gewenste folder een nieuwe site.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new gatsby-site</code></pre></div>\n<p>Eens je dan naar de plek bent genavigeerd waar de nieuwe site staat kun je de development server starten. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby develop</code></pre></div>\n<p>Gatsby zal dan vervolgens een live development omgeving creëren die beschikbaar is in de browser via het adres <code class=\"language-text\">localhost:8000</code></p>\n<h1>Code Gatsby-project</h1>\n<p>Wanneer je Gatsby succesvol hebt geïnstalleerd zorgt dit voor een correct framework waar je zelf dus wijzigingen zult moeten aanbrengen. </p>\n<h2>gatsby-browser</h2>\n<p>Dit is de inhoud van het <code class=\"language-text\">gatsby-browser.js</code> bestand:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import &quot;./src/styles/global.css&quot;\nrequire(&quot;prismjs/themes/prism-funky.css&quot;)</code></pre></div>\n<h2>gatsby-config</h2>\n<p>Dit is de inhoud van het <code class=\"language-text\">gatsby-config.js</code> bestand:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n  pathPrefix: &quot;/04-ssg-milangoossens&quot;,\n  siteMetadata: {\n    title: `Gatsby Default Starter`,\n    description: `Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.`,\n    author: `@gatsbyjs`,\n  },\n  plugins: [\n    `gatsby-plugin-react-helmet`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    },\n    `gatsby-transformer-sharp`,\n    `gatsby-plugin-sharp`,\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: `gatsby-starter-default`,\n        short_name: `starter`,\n        start_url: `/`,\n        background_color: `#663399`,\n        theme_color: `#663399`,\n        display: `minimal-ui`,\n        icon: `src/images/gatsby-icon.png`, \n      },\n    },\n    {\n    resolve: `gatsby-source-filesystem`,\n    options: {\n      path: `${__dirname}/src/pages/markdown`,\n      name: &quot;markdown-pages&quot;,\n      },\n    },\n    `gatsby-transformer-remark`,\n    {\n    resolve: `gatsby-transformer-remark`,\n    options: {\n      plugins: [\n        {\n          resolve: `gatsby-remark-prismjs`,\n          options: {\n            \n            classPrefix: &quot;language-&quot;,\n            \n            inlineCodeMarker: null,\n           \n            aliases: {},\n            \n            showLineNumbers: false,\n            \n            noInlineHighlight: false,\n          },\n        },\n      ],\n    },\n  },\n]\n  \n}</code></pre></div>\n<h2>gatsby-browser</h2>\n<p>Dit is de inhoud van het <code class=\"language-text\">gatsby-node.js</code> bestand:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const path = require(&quot;path&quot;)\n\nexports.createPages = ({ actions, graphql }) =&gt; {\n  const { createPage } = actions\n\n  const blogPostTemplate = path.resolve(`src/templates/blogTemplate.js`)\n\n  return graphql(`\n    {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              path\n            }\n          }\n        }\n      }\n    }\n  `).then(result =&gt; {\n    if (result.errors) {\n      return Promise.reject(result.errors)\n    }\n\n    result.data.allMarkdownRemark.edges.forEach(({ node }) =&gt; {\n      createPage({\n        path: node.frontmatter.path,\n        component: blogPostTemplate,\n        context: {}, // additional data can be passed via context\n      })\n    })\n  })\n}</code></pre></div>\n<h1>Opmaak</h1>\n<p>Voor de opmaak van de site maak je gebruik van javascript en css bestanden.\nDeze bestanden plaats je in de <code class=\"language-text\">src/components</code> map.</p>\n<h2></h2>","frontmatter":{"date":"November 07, 2017","path":"/page1","title":"About"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}